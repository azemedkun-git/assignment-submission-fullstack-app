[{"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\index.js":"1","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\App.js":"2","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\reportWebVitals.js":"3","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\util\\useLocalStrorage.js":"4","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Homepage\\index.js":"5","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Dashboard\\index.js":"6","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\PrivateRoute\\index.js":"7","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Login\\index.js":"8","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\AssignmentView\\index.js":"9","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Services\\fetchService.js":"10","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\CodeReviewerDashboard\\index.js":"11"},{"size":628,"mtime":1700710393488,"results":"12","hashOfConfig":"13"},{"size":1352,"mtime":1703885588891,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1699904348287,"results":"15","hashOfConfig":"13"},{"size":463,"mtime":1700897211115,"results":"16","hashOfConfig":"13"},{"size":155,"mtime":1700710331811,"results":"17","hashOfConfig":"13"},{"size":3096,"mtime":1703605841006,"results":"18","hashOfConfig":"13"},{"size":1074,"mtime":1702936642319,"results":"19","hashOfConfig":"13"},{"size":3277,"mtime":1700897527028,"results":"20","hashOfConfig":"13"},{"size":5802,"mtime":1703603604597,"results":"21","hashOfConfig":"13"},{"size":498,"mtime":1703197418696,"results":"22","hashOfConfig":"13"},{"size":3075,"mtime":1703885403916,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"sx88k0",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\index.js",[],[],["61","62","63","64","65","66"],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\App.js",["67","68"],[],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\reportWebVitals.js",[],[],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\util\\useLocalStrorage.js",[],[],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Homepage\\index.js",[],[],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Dashboard\\index.js",[],[],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\PrivateRoute\\index.js",["69"],[],"import React, { useState } from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { ajax } from \"../Services/fetchService\";\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isValid, setIsValid] = useState(null);\r\n\r\n  if (jwt) {\r\n    ajax(`/api/auth/validate?token=${jwt}`, \"get\", jwt).then((isValid) => {\r\n      setIsValid(isValid);\r\n      setIsLoading(false);\r\n    });\r\n  } else {\r\n    return <Navigate to={\"/login\"} />;\r\n  }\r\n  return isLoading ? (\r\n    <div>Loading... </div>\r\n  ) : isValid === true ? (\r\n    children\r\n  ) : (\r\n    <Navigate to={\"/login\"} />\r\n  );\r\n};\r\n// import React from \"react\";\r\n// import { useLocalState } from \"../util/useLocalStrorage\";\r\n// import { Navigate } from \"react-router-dom\";\r\n\r\n// export const PrivateRoute = ({ children }) => {\r\n//   const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n//   return jwt ? children : <Navigate to=\"/login\" />;\r\n// };\r\n","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Login\\index.js",["70"],[],"import React, { useState } from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\n//import { ajax } from \"../Services/fetchService\";\r\nimport { Button, Col, Container, Row, Form } from \"react-bootstrap\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n  function sendLoginRequest() {\r\n    const reqBody = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    // ajax(\"api/auth/login\", \"POST\", jwt, reqBody);\r\n    fetch(\"api/auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"post\",\r\n      body: JSON.stringify(reqBody),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200)\r\n          return Promise.all([response.json(), response.headers]);\r\n        else return Promise.reject(\"Invalid login attempt\");\r\n      })\r\n      .then(([body, headers]) => {\r\n        //\"authorization\" comes from backend HttpStatus.AUTHORIZE=> Authorization\r\n        // It can be seen at the backend or Network->headers tab of the browser\r\n        setJwt(headers.get(\"authorization\"));\r\n        //if logged successfully send to the dashboard page\r\n        window.location.href = \"dashboard\";\r\n      })\r\n      .catch((message) => {\r\n        alert(message);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Container className=\"mt-5 \">\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"8\" lg=\"6\">\r\n            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n              <Form.Label className=\"fs-4\">Username</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter your email\"\r\n                size=\"lg\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"8\" lg=\"6\">\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n              <Form.Label className=\"fs-4\">Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                size=\"lg\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col\r\n            md=\"8\"\r\n            lg=\"6\"\r\n            className=\"mt-2 d-flex flex-column gap-4 flex-md-row justify-content-md-between\"\r\n          >\r\n            <Button\r\n              id=\"submit\"\r\n              type=\"button\"\r\n              size=\"lg\"\r\n              onClick={() => sendLoginRequest()}\r\n            >\r\n              Login\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"secondary\"\r\n              id=\"submit\"\r\n              type=\"button\"\r\n              size=\"lg\"\r\n              onClick={() => (window.location.href = \"/\")}\r\n            >\r\n              Exit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\AssignmentView\\index.js",["71","72"],[],"import React, { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\nimport { ajax } from \"../Services/fetchService\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonGroup,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Form,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nexport const AssignmentView = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\r\n  const { id } = useParams();\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    githubUrl: \"\",\r\n    branch: \"\",\r\n    number: null,\r\n    status: null,\r\n  });\r\n  const [assignmentEnums, setAssignmentEnums] = useState([]);\r\n  const [assignmentStatuses, setAssignmentStatuses] = useState([]);\r\n  function updateAssignment(prop, value) {\r\n    const newAssignment = { ...assignment };\r\n    newAssignment[prop] = value;\r\n    setAssignment(newAssignment);\r\n  }\r\n  function persist() {\r\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(\r\n      (assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      }\r\n    );\r\n  }\r\n  //Save func modified to support useRef and fix problems with persisting staus change\r\n  function save() {\r\n    if (assignment.status === assignmentStatuses[0].status) {\r\n      updateAssignment(\"status\", assignmentStatuses[1].status);\r\n    } else persist();\r\n  }\r\n\r\n  //useRef and below block of code, is required because the asynchronousness of React do not allow the assignment\r\n  //status in the save() function to change and send to database immediately.\r\n  // It allows change to occur later. So, the change is not reflected in the database\r\n\r\n  /********************** From Here ****************************************/\r\n  const previousAssignmentValue = useRef(assignment);\r\n\r\n  useEffect(() => {\r\n    if (previousAssignmentValue.current.status !== assignment.status) {\r\n      persist();\r\n    }\r\n    previousAssignmentValue.current = assignment;\r\n  }, [assignment]);\r\n\r\n  /********************* To Here *******************************************/\r\n\r\n  useEffect(() => {\r\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then((assignmentResponse) => {\r\n      let assignmentData = assignmentResponse?.assignment;\r\n      if (assignmentData.branch === null) assignmentData.branch = \"\";\r\n      if (assignmentData.githubUrl === null) assignmentData.githubUrl = \"\";\r\n      setAssignment(assignmentData);\r\n      setAssignmentEnums(assignmentResponse.assignmentEnums);\r\n      setAssignmentStatuses(assignmentResponse.statusEnums);\r\n    });\r\n  }, [id, jwt]);\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"d-flex align-items-center\">\r\n        <Col>\r\n          {assignment.number ? <h1>Assignment {assignment.number}</h1> : <></>}\r\n        </Col>\r\n        <Col>\r\n          <Badge pill bg=\"info\" style={{ fontSize: \"1em\" }}>\r\n            {assignment?.status}\r\n          </Badge>\r\n        </Col>\r\n      </Row>\r\n\r\n      {assignment ? (\r\n        <>\r\n          <Form.Group as={Row} className=\"my-3\" controlId=\"assignmentName\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              Assignment Number:\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant={\"info\"}\r\n                title={\r\n                  assignment.number\r\n                    ? `Assignment ${assignment.number}`\r\n                    : \"Select an assignment\"\r\n                }\r\n                onSelect={(selectedElement) =>\r\n                  updateAssignment(\"number\", selectedElement)\r\n                }\r\n              >\r\n                {assignmentEnums.map((assignmentEnum) => (\r\n                  <Dropdown.Item\r\n                    eventKey={assignmentEnum.assignmentNum}\r\n                    key={assignmentEnum.assignmentNum}\r\n                  >\r\n                    {assignmentEnum.assignmentNum}{\" \"}\r\n                    {assignmentEnum.assignmentName}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} className=\"my-3\" controlId=\"githubRrl\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              GitHub URL:\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <Form.Control\r\n                type=\"url\"\r\n                value={assignment?.githubUrl || \"\"}\r\n                onChange={(e) => updateAssignment(\"githubUrl\", e.target.value)}\r\n                placeholder=\"Https://github.com/username/repo-name\"\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"branch\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              Branch :\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"branch\"\r\n                value={assignment?.branch || \"\"}\r\n                onChange={(e) => updateAssignment(\"branch\", e.target.value)}\r\n                placeholder=\"example_branch_name\"\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <div className=\"d-flex gap-5\">\r\n            <Button size=\"lg\" type=\"submit\" onClick={() => save()}>\r\n              Submit Assignment\r\n            </Button>\r\n            <Button\r\n              size=\"lg\"\r\n              variant=\"secondary\"\r\n              onClick={() => (window.location.href = \"/dashboard\")}\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\Services\\fetchService.js",[],[],"E:\\FullStack React-Springboot\\AssignmentSubmissionApp\\assignment-submission-app-ui\\src\\CodeReviewerDashboard\\index.js",["73"],[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":14,"column":15,"nodeType":"88","messageId":"89","endLine":14,"endColumn":21},{"ruleId":"86","severity":1,"message":"90","line":15,"column":17,"nodeType":"88","messageId":"89","endLine":15,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":7,"column":15,"nodeType":"88","messageId":"89","endLine":7,"endColumn":21},{"ruleId":"86","severity":1,"message":"91","line":9,"column":10,"nodeType":"88","messageId":"89","endLine":9,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":20,"column":15,"nodeType":"88","messageId":"89","endLine":20,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":63,"column":6,"nodeType":"94","endLine":63,"endColumn":18,"suggestions":"95"},{"ruleId":"86","severity":1,"message":"96","line":16,"column":12,"nodeType":"88","messageId":"89","endLine":16,"endColumn":28},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["97"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'setJwt' is assigned a value but never used.","Identifier","unusedVar","'setRoles' is assigned a value but never used.","'jwt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'persist'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'createAssignment' is defined but never used.","no-object-constructor",{"desc":"99","fix":"100"},"Update the dependencies array to be: [assignment, persist]",{"range":"101","text":"102"},[2118,2130],"[assignment, persist]"]