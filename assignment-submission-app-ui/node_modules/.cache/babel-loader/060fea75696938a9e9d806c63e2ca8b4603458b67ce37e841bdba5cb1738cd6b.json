{"ast":null,"code":"var _jsxFileName = \"E:\\\\FullStack React-Springboot\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\Dashboard\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocalState } from \"../util/useLocalStrorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [assignments, setAssignments] = useState(null);\n  useEffect(() => {\n    fetch(\"api/assignments\", {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"GET\"\n    }, []).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentsData => {\n      setAssignments(assignmentsData);\n    });\n  });\n  function createAssignment() {\n    fetch(\"api/assignments\", {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"POST\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignment => {\n      window.location.href = `/assignments/${assignment.id}`;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"2em\"\n    },\n    children: [assignments ? assignments.map(assignment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Assignment ID: \", assignment.id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createAssignment(),\n      children: \"Submit New Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qPJy8vKNXu36rQsO8BA8X/Xtryc=\", false, function () {\n  return [useLocalState];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","jwt","setJwt","assignments","setAssignments","fetch","headers","Authorization","method","then","response","status","json","assignmentsData","createAssignment","assignment","window","location","href","id","style","margin","children","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/FullStack React-Springboot/AssignmentSubmissionApp/assignment-submission-app-ui/src/Dashboard/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\n\r\nconst Dashboard = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [assignments, setAssignments] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"api/assignments\",\r\n      {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${jwt}`,\r\n        },\r\n        method: \"GET\",\r\n      },\r\n      []\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignmentsData) => {\r\n        setAssignments(assignmentsData);\r\n      });\r\n  });\r\n  function createAssignment() {\r\n    fetch(\"api/assignments\", {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignment) => {\r\n        window.location.href = `/assignments/${assignment.id}`;\r\n      });\r\n  }\r\n  return (\r\n    <div style={{ margin: \"2em\" }}>\r\n      {assignments ? (\r\n        assignments.map((assignment) => (\r\n          <div>Assignment ID: {assignment.id} </div>\r\n        ))\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <button onClick={() => createAssignment()}>Submit New Assignment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACda,KAAK,CACH,iBAAiB,EACjB;MACEC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASN,GAAI;MAC/B,CAAC;MACDO,MAAM,EAAE;IACV,CAAC,EACD,EACF,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC,CACDH,IAAI,CAAEI,eAAe,IAAK;MACzBT,cAAc,CAACS,eAAe,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,CAAC;EACF,SAASC,gBAAgBA,CAAA,EAAG;IAC1BT,KAAK,CAAC,iBAAiB,EAAE;MACvBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASN,GAAI;MAC/B,CAAC;MACDO,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC,CACDH,IAAI,CAAEM,UAAU,IAAK;MACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,gBAAeH,UAAU,CAACI,EAAG,EAAC;IACxD,CAAC,CAAC;EACN;EACA,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,GAC3BnB,WAAW,GACVA,WAAW,CAACoB,GAAG,CAAER,UAAU,iBACzBnB,OAAA;MAAA0B,QAAA,GAAK,iBAAe,EAACP,UAAU,CAACI,EAAE,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC1C,CAAC,gBAEF/B,OAAA,CAAAE,SAAA,mBAAI,CACL,eACDF,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlDID,SAAS;EAAA,QACSL,aAAa;AAAA;AAAAmC,EAAA,GAD/B9B,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}