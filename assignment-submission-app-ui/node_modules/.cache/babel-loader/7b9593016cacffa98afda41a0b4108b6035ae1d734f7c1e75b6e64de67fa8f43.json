{"ast":null,"code":"var _jsxFileName = \"E:\\\\FullStack React-Springboot\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\AssignmentView\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalState } from \"../util/useLocalStrorage\";\nimport { ajax } from \"../Services/fetchService\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AssignmentView = () => {\n  _s();\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\n  const {\n    id\n  } = useParams();\n  const [assignment, setAssignment] = useState({\n    githubUrl: \"\",\n    branch: \"\"\n  });\n  //const { githubUrl, branch } = assignment;\n\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function updateAssignment(e) {\n    // const newAssignment = { ...assignment };\n    // newAssignment[prop] = value;\n    // setAssignment(newAssignment);\n    setAssignment({\n      ...assignment,\n      [e.target.name]: e.target.value\n    });\n    console.log(assignment);\n  }\n  function save() {\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }\n  useEffect(() => {\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }, [id, jwt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Assignment \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"GitHub URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"githubUrl\",\n          name: \"githubUrl\",\n          value: githubUrl || \"\",\n          onChange: e => updateAssignment(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Branch:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          name: \"branch\",\n          value: branch || \"\",\n          onChange: e => updateAssignment(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        onClick: () => save(),\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentView, \"NM9qfBJuNXVbU5o4gxhkQ55RsWo=\", false, function () {\n  return [useParams, useLocalState];\n});\n_c = AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocalState","ajax","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","id","assignment","setAssignment","githubUrl","branch","jwt","setJwt","updateAssignment","e","target","name","value","console","log","save","then","assignmentData","children","fileName","_jsxFileName","lineNumber","columnNumber","status","type","onChange","size","onClick","_c","$RefreshReg$"],"sources":["E:/FullStack React-Springboot/AssignmentSubmissionApp/assignment-submission-app-ui/src/AssignmentView/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\nimport { ajax } from \"../Services/fetchService\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport const AssignmentView = () => {\r\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\r\n  const { id } = useParams();\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    githubUrl: \"\",\r\n    branch: \"\",\r\n  });\r\n  //const { githubUrl, branch } = assignment;\r\n\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n  function updateAssignment(e) {\r\n    // const newAssignment = { ...assignment };\r\n    // newAssignment[prop] = value;\r\n    // setAssignment(newAssignment);\r\n    setAssignment({ ...assignment, [e.target.name]: e.target.value });\r\n    console.log(assignment);\r\n  }\r\n\r\n  function save() {\r\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(\r\n      (assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      }\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then((assignmentData) => {\r\n      setAssignment(assignmentData);\r\n    });\r\n  }, [id, jwt]);\r\n\r\n  return (\r\n    <div>\r\n      <h1> Assignment {id}</h1>\r\n      {assignment ? (\r\n        <>\r\n          <h2>Status: {assignment.status}</h2>\r\n          <h2>\r\n            GitHub URL:\r\n            <input\r\n              type=\"url\"\r\n              id=\"githubUrl\"\r\n              name=\"githubUrl\"\r\n              value={githubUrl || \"\"}\r\n              onChange={(e) => updateAssignment(e)}\r\n            />\r\n          </h2>\r\n          <h2>\r\n            Branch:\r\n            <input\r\n              type=\"text\"\r\n              id=\"branch\"\r\n              name=\"branch\"\r\n              value={branch || \"\"}\r\n              onChange={(e) => updateAssignment(e)}\r\n            />\r\n          </h2>\r\n          <Button size=\"lg\" type=\"submit\" onClick={() => save()}>\r\n            Submit Assignment\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}