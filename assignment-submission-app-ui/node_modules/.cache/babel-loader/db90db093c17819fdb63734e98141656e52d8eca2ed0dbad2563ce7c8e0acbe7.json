{"ast":null,"code":"var _jsxFileName = \"E:\\\\Spring boot projects\\\\StudentAssignmentSubmissionFullStack\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocalState } from \"../util/useLocalStrorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst login = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function sendLoginRequest() {\n    const reqBody = {\n      username: \"trevor\",\n      password: \"asdfasdf\"\n    };\n    fetch(\"api/auth/login\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"post\",\n      body: JSON.stringify(reqBody)\n    }).then(response => Promise.all([response.json(), response.headers])).then(([body, headers]) => {\n      //\"authorization\" comes from backend HttpStatus.AUTHORIZE=> Authorization\n      // It can be seen at the backend or Network->headers tab of the browser\n      setJwt(headers.get(\"authorization\"));\n      // console.log(jwt);\n      // console.log(body);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit\",\n        type: \"button\",\n        onClick: () => sendLoginRequest(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(login, \"Ik47MptFYNtyQa5EonoqndL2nAM=\", false, function () {\n  return [useLocalState];\n});\nexport default login;","map":{"version":3,"names":["React","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","login","_s","jwt","setJwt","sendLoginRequest","reqBody","username","password","fetch","headers","method","body","JSON","stringify","then","response","Promise","all","json","get","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick"],"sources":["E:/Spring boot projects/StudentAssignmentSubmissionFullStack/AssignmentSubmissionApp/assignment-submission-app-ui/src/Login/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\n\r\nconst login = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n  function sendLoginRequest() {\r\n    const reqBody = {\r\n      username: \"trevor\",\r\n      password: \"asdfasdf\",\r\n    };\r\n    fetch(\"api/auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"post\",\r\n      body: JSON.stringify(reqBody),\r\n    })\r\n      .then((response) => Promise.all([response.json(), response.headers]))\r\n      .then(([body, headers]) => {\r\n        //\"authorization\" comes from backend HttpStatus.AUTHORIZE=> Authorization\r\n        // It can be seen at the backend or Network->headers tab of the browser\r\n        setJwt(headers.get(\"authorization\"));\r\n        // console.log(jwt);\r\n        // console.log(body);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input type=\"email\" id=\"username\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" />\r\n      </div>\r\n      <div>\r\n        <button id=\"submit\" type=\"button\" onClick={() => sendLoginRequest()}>\r\n          Login\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAE9C,SAASS,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,OAAO,GAAG;MACdC,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,CAAC,gBAAgB,EAAE;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;IAC9B,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAEH,QAAQ,CAACN,OAAO,CAAC,CAAC,CAAC,CACpEK,IAAI,CAAC,CAAC,CAACH,IAAI,EAAEF,OAAO,CAAC,KAAK;MACzB;MACA;MACAN,MAAM,CAACM,OAAO,CAACU,GAAG,CAAC,eAAe,CAAC,CAAC;MACpC;MACA;IACF,CAAC,CAAC;EACN;;EACA,oBACEtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAOwB,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1C5B,OAAA;QAAO6B,IAAI,EAAC,OAAO;QAACC,EAAE,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACN5B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAOwB,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1C5B,OAAA;QAAO6B,IAAI,EAAC,UAAU;QAACC,EAAE,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACN5B,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAQ8B,EAAE,EAAC,QAAQ;QAACD,IAAI,EAAC,QAAQ;QAACE,OAAO,EAAEA,CAAA,KAAMxB,gBAAgB,CAAC,CAAE;QAAAgB,QAAA,EAAC;MAErE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACxB,EAAA,CAzCID,KAAK;EAAA,QACaL,aAAa;AAAA;AA0CrC,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}