{"ast":null,"code":"var _jsxFileName = \"E:\\\\FullStack React-Springboot\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\AssignmentView\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalState } from \"../util/useLocalStrorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AssignmentView = () => {\n  _s();\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\n  const {\n    id\n  } = useParams();\n  const [assignment, setAssignment] = useState({\n    githubUrl: \"\",\n    branch: \"\"\n  });\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function updateAssignment(prop = \"\", value) {\n    //setAssignment({ ...assignment, prop: value });\n    const newAssignment = {\n      ...assignment\n    };\n    newAssignment[prop] = value;\n    setAssignment(newAssignment);\n    console.log(assignment);\n  }\n  function save() {\n    fetch(`/api/assignments/${id}`, {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"PUT\",\n      body: JSON.stringify(assignment)\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }\n  useEffect(() => {\n    fetch(`/api/assignments/${id}`, {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${jwt}`\n      },\n      method: \"GET\"\n    }).then(response => {\n      if (response.status === 200) return response.json();\n    }).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }, [id, jwt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Assignment \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"GitHub URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"githubUrl\",\n          value: assignment.githubUrl,\n          onChange: e => updateAssignment(\"githubUrl\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Branch:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          value: assignment.branch,\n          onChange: e => updateAssignment(\"branch\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => save(),\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentView, \"NM9qfBJuNXVbU5o4gxhkQ55RsWo=\", false, function () {\n  return [useParams, useLocalState];\n});\n_c = AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocalState","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","id","assignment","setAssignment","githubUrl","branch","jwt","setJwt","updateAssignment","prop","value","newAssignment","console","log","save","fetch","headers","Authorization","method","body","JSON","stringify","then","response","status","json","assignmentData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/FullStack React-Springboot/AssignmentSubmissionApp/assignment-submission-app-ui/src/AssignmentView/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\n\r\nexport const AssignmentView = () => {\r\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\r\n  const { id } = useParams();\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    githubUrl: \"\",\r\n    branch: \"\",\r\n  });\r\n\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n  function updateAssignment(prop = \"\", value) {\r\n    //setAssignment({ ...assignment, prop: value });\r\n    const newAssignment = { ...assignment };\r\n    newAssignment[prop] = value;\r\n    setAssignment(newAssignment);\r\n    console.log(assignment);\r\n  }\r\n\r\n  function save() {\r\n    fetch(`/api/assignments/${id}`, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n      method: \"PUT\",\r\n      body: JSON.stringify(assignment),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    fetch(`/api/assignments/${id}`, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${jwt}`,\r\n      },\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then((assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      });\r\n  }, [id, jwt]);\r\n\r\n  return (\r\n    <div>\r\n      <h1> Assignment {id}</h1>\r\n      {assignment ? (\r\n        <>\r\n          <h2>Status: {assignment.status}</h2>\r\n          <h2>\r\n            GitHub URL:\r\n            <input\r\n              type=\"url\"\r\n              id=\"githubUrl\"\r\n              value={assignment.githubUrl}\r\n              onChange={(e) => updateAssignment(\"githubUrl\", e.target.value)}\r\n            />\r\n          </h2>\r\n          <h2>\r\n            Branch:{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              id=\"branch\"\r\n              value={assignment.branch}\r\n              onChange={(e) => updateAssignment(\"branch\", e.target.value)}\r\n            />\r\n          </h2>\r\n          <button type=\"submit\" onClick={() => save()}>\r\n            Submit Assignment\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}