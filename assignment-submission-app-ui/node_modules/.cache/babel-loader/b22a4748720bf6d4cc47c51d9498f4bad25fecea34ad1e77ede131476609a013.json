{"ast":null,"code":"var _jsxFileName = \"E:\\\\FullStack React-Springboot\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport CodeReviewerDashboard from \"./CodeReviewerDashboard\";\nimport Homepage from \"./Homepage\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { AssignmentView } from \"./AssignmentView\";\nimport Login from \"./Login\";\nimport { useLocalState } from \"./util/useLocalStrorage\";\nimport { useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [roles, setRoles] = useState(getRoleFromJwt());\n  function getRoleFromJwt() {\n    if (jwt) {\n      const decodeJwt = jwtDecode(jwt);\n      return decodeJwt.authorities;\n    } else {\n      return [];\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"dashboard\",\n      element: roles.find(role => role === \"ROLE_CODE_REVIEWER\") ? /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        children: /*#__PURE__*/_jsxDEV(CodeReviewerDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/assignments/:id\",\n      element: roles.find(role => role === \"ROLE_CODE_REVIEWER\") ? /*#__PURE__*/_jsxDEV(CodeReviewAssignmentView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AssignmentView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"Login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gFrr06PxzmTQrN3oR+pA/enxvMo=\", false, function () {\n  return [useLocalState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","Dashboard","CodeReviewerDashboard","Homepage","PrivateRoute","AssignmentView","Login","useLocalState","useState","jwtDecode","jsxDEV","_jsxDEV","App","_s","jwt","setJwt","roles","setRoles","getRoleFromJwt","decodeJwt","authorities","children","path","element","find","role","fileName","_jsxFileName","lineNumber","columnNumber","CodeReviewAssignmentView","_c","$RefreshReg$"],"sources":["E:/FullStack React-Springboot/AssignmentSubmissionApp/assignment-submission-app-ui/src/App.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport CodeReviewerDashboard from \"./CodeReviewerDashboard\";\nimport Homepage from \"./Homepage\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { AssignmentView } from \"./AssignmentView\";\nimport Login from \"./Login\";\nimport { useLocalState } from \"./util/useLocalStrorage\";\nimport { useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction App() {\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [roles, setRoles] = useState(getRoleFromJwt());\n\n  function getRoleFromJwt() {\n    if (jwt) {\n      const decodeJwt = jwtDecode(jwt);\n      return decodeJwt.authorities;\n    } else {\n      return [];\n    }\n  }\n  return (\n    <Routes>\n      <Route\n        path=\"dashboard\"\n        element={\n          roles.find((role) => role === \"ROLE_CODE_REVIEWER\") ? (\n            <PrivateRoute>\n              <CodeReviewerDashboard />\n            </PrivateRoute>\n          ) : (\n            <PrivateRoute>\n              <Dashboard />\n            </PrivateRoute>\n          )\n        }\n      />\n      <Route\n        path=\"/assignments/:id\"\n        element={\n          roles.find((role) => role === \"ROLE_CODE_REVIEWER\") ? (\n            <CodeReviewAssignmentView />\n          ) : (\n            <AssignmentView />\n          )\n        }\n      />\n      <Route path=\"Login\" element={<Login />} />\n      <Route path=\"/\" element={<Homepage />} />\n    </Routes>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}