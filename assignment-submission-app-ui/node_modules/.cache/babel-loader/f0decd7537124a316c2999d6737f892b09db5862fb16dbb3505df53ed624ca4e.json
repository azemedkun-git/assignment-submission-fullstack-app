{"ast":null,"code":"var _jsxFileName = \"E:\\\\Spring boot projects\\\\StudentAssignmentSubmissionFullStack\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStrorage\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  useEffect(() => {\n    if (!jwt) {\n      const reqBody = {\n        username: \"trevor\",\n        password: \"asdfasdf\"\n      };\n      fetch(\"api/auth/login\", {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"post\",\n        body: JSON.stringify(reqBody)\n      }).then(response => Promise.all([response.json(), response.headers])).then(([body, headers]) => {\n        //\"authorization\" comes from backend HttpStatus.AUTHORIZE=> Authorization\n        // It can be seen at the backend or Network->headers tab of the browser\n        setJwt(headers.get(\"authorization\"));\n        // console.log(jwt);\n        // console.log(body);\n      });\n    }\n  }, [jwt, setJwt]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v/aKVn1JU58AhXfIy5/4RB908PI=\", false, function () {\n  return [useLocalState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useLocalState","Route","Routes","Dashboard","jsxDEV","_jsxDEV","App","_s","jwt","setJwt","reqBody","username","password","fetch","headers","method","body","JSON","stringify","then","response","Promise","all","json","get","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Spring boot projects/StudentAssignmentSubmissionFullStack/AssignmentSubmissionApp/assignment-submission-app-ui/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStrorage\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\n\nfunction App() {\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n\n  useEffect(() => {\n    if (!jwt) {\n      const reqBody = {\n        username: \"trevor\",\n        password: \"asdfasdf\",\n      };\n      fetch(\"api/auth/login\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"post\",\n        body: JSON.stringify(reqBody),\n      })\n        .then((response) => Promise.all([response.json(), response.headers]))\n        .then(([body, headers]) => {\n          //\"authorization\" comes from backend HttpStatus.AUTHORIZE=> Authorization\n          // It can be seen at the backend or Network->headers tab of the browser\n          setJwt(headers.get(\"authorization\"));\n          // console.log(jwt);\n          // console.log(body);\n        });\n    }\n  }, [jwt, setJwt]);\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Dashboard />} />\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,GAAG,EAAE;MACR,MAAME,OAAO,GAAG;QACdC,QAAQ,EAAE,QAAQ;QAClBC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,CAAC,gBAAgB,EAAE;QACtBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;MAC9B,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAKC,OAAO,CAACC,GAAG,CAAC,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,EAAEH,QAAQ,CAACN,OAAO,CAAC,CAAC,CAAC,CACpEK,IAAI,CAAC,CAAC,CAACH,IAAI,EAAEF,OAAO,CAAC,KAAK;QACzB;QACA;QACAL,MAAM,CAACK,OAAO,CAACU,GAAG,CAAC,eAAe,CAAC,CAAC;QACpC;QACA;MACF,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAAChB,GAAG,EAAEC,MAAM,CAAC,CAAC;EACjB,oBACEJ,OAAA,CAACH,MAAM;IAAAuB,QAAA,eACLpB,OAAA,CAACJ,KAAK;MAACyB,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEtB,OAAA,CAACF,SAAS;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEb;AAACxB,EAAA,CA/BQD,GAAG;EAAA,QACYN,aAAa;AAAA;AAAAgC,EAAA,GAD5B1B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}