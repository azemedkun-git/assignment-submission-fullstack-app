{"ast":null,"code":"var _jsxFileName = \"E:\\\\FullStack React-Springboot\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\AssignmentView\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalState } from \"../util/useLocalStrorage\";\nimport { ajax } from \"../Services/fetchService\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AssignmentView = () => {\n  _s();\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\n  const {\n    id\n  } = useParams();\n  const [assignment, setAssignment] = useState({\n    githubUrl: \"\",\n    branch: \"\"\n  });\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  function updateAssignment(prop, value) {\n    const newAssignment = {\n      ...assignment\n    };\n    newAssignment[prop] = value;\n    setAssignment(newAssignment);\n    // setAssignment({ ...assignment, [e.target.name]: e.target.value });\n  }\n\n  function save() {\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }\n  useEffect(() => {\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }, [id, jwt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Assignment \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"2\",\n          children: \"GitHub URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"githubRrl\",\n            type: \"url\",\n            value: githubUrl || \"\",\n            onChange: e => updateAssignment(githubUrl, e.target.value),\n            placeholder: \"Https://github.com/username/repo-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"2\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"10\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"GitHub URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"githubUrl\",\n          name: \"githubUrl\",\n          value: githubUrl || \"\",\n          onChange: e => updateAssignment(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Branch:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"branch\",\n          name: \"branch\",\n          value: branch || \"\",\n          onChange: e => updateAssignment(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        onClick: () => save(),\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentView, \"NM9qfBJuNXVbU5o4gxhkQ55RsWo=\", false, function () {\n  return [useParams, useLocalState];\n});\n_c = AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocalState","ajax","Button","Col","Form","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","id","assignment","setAssignment","githubUrl","branch","jwt","setJwt","updateAssignment","prop","value","newAssignment","save","then","assignmentData","children","fileName","_jsxFileName","lineNumber","columnNumber","status","Group","as","className","controlId","Label","column","sm","Control","type","onChange","e","target","placeholder","name","size","onClick","_c","$RefreshReg$"],"sources":["E:/FullStack React-Springboot/AssignmentSubmissionApp/assignment-submission-app-ui/src/AssignmentView/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\nimport { ajax } from \"../Services/fetchService\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\n\r\nexport const AssignmentView = () => {\r\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\r\n  const { id } = useParams();\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    githubUrl: \"\",\r\n    branch: \"\",\r\n  });\r\n\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n  function updateAssignment(prop, value) {\r\n    const newAssignment = { ...assignment };\r\n    newAssignment[prop] = value;\r\n    setAssignment(newAssignment);\r\n    // setAssignment({ ...assignment, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function save() {\r\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(\r\n      (assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      }\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then((assignmentData) => {\r\n      setAssignment(assignmentData);\r\n    });\r\n  }, [id, jwt]);\r\n\r\n  return (\r\n    <div>\r\n      <h1> Assignment {id}</h1>\r\n      {assignment ? (\r\n        <>\r\n          <h2>Status: {assignment.status}</h2>\r\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"2\">\r\n              GitHub URL:\r\n            </Form.Label>\r\n            <Col sm=\"10\">\r\n              <Form.Control\r\n                id=\"githubRrl\"\r\n                type=\"url\"\r\n                value={githubUrl || \"\"}\r\n                onChange={(e) => updateAssignment(githubUrl, e.target.value)}\r\n                placeholder=\"Https://github.com/username/repo-name\"\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"mb-3\"\r\n            controlId=\"formPlaintextPassword\"\r\n          >\r\n            <Form.Label column sm=\"2\">\r\n              Password\r\n            </Form.Label>\r\n            <Col sm=\"10\">\r\n              <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            </Col>\r\n          </Form.Group>\r\n          <h2>\r\n            GitHub URL:\r\n            <input\r\n              type=\"url\"\r\n              id=\"githubUrl\"\r\n              name=\"githubUrl\"\r\n              value={githubUrl || \"\"}\r\n              onChange={(e) => updateAssignment(e)}\r\n            />\r\n          </h2>\r\n          <h2>\r\n            Branch:\r\n            <input\r\n              type=\"text\"\r\n              id=\"branch\"\r\n              name=\"branch\"\r\n              value={branch || \"\"}\r\n              onChange={(e) => updateAssignment(e)}\r\n            />\r\n          </h2>\r\n          <Button size=\"lg\" type=\"submit\" onClick={() => save()}>\r\n            Submit Assignment\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGb,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC;IAC3CiB,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGlB,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAE9C,SAASmB,gBAAgBA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACrC,MAAMC,aAAa,GAAG;MAAE,GAAGT;IAAW,CAAC;IACvCS,aAAa,CAACF,IAAI,CAAC,GAAGC,KAAK;IAC3BP,aAAa,CAACQ,aAAa,CAAC;IAC5B;EACF;;EAEA,SAASC,IAAIA,CAAA,EAAG;IACdtB,IAAI,CAAE,oBAAmBW,EAAG,EAAC,EAAE,KAAK,EAAEK,GAAG,EAAEJ,UAAU,CAAC,CAACW,IAAI,CACxDC,cAAc,IAAK;MAClBX,aAAa,CAACW,cAAc,CAAC;IAC/B,CACF,CAAC;EACH;EACA5B,SAAS,CAAC,MAAM;IACdI,IAAI,CAAE,oBAAmBW,EAAG,EAAC,EAAE,KAAK,EAAEK,GAAG,CAAC,CAACO,IAAI,CAAEC,cAAc,IAAK;MAClEX,aAAa,CAACW,cAAc,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACb,EAAE,EAAEK,GAAG,CAAC,CAAC;EAEb,oBACEV,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAI,cAAY,EAACd,EAAE;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACxBjB,UAAU,gBACTN,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,GAAI,UAAQ,EAACb,UAAU,CAACkB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpCvB,OAAA,CAACH,IAAI,CAAC4B,KAAK;QAACC,EAAE,EAAE5B,GAAI;QAAC6B,SAAS,EAAC,MAAM;QAACC,SAAS,EAAC,oBAAoB;QAAAT,QAAA,gBAClEnB,OAAA,CAACH,IAAI,CAACgC,KAAK;UAACC,MAAM;UAACC,EAAE,EAAC,GAAG;UAAAZ,QAAA,EAAC;QAE1B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbvB,OAAA,CAACJ,GAAG;UAACmC,EAAE,EAAC,IAAI;UAAAZ,QAAA,eACVnB,OAAA,CAACH,IAAI,CAACmC,OAAO;YACX3B,EAAE,EAAC,WAAW;YACd4B,IAAI,EAAC,KAAK;YACVnB,KAAK,EAAEN,SAAS,IAAI,EAAG;YACvB0B,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACJ,SAAS,EAAE2B,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAE;YAC7DuB,WAAW,EAAC;UAAuC;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAEbvB,OAAA,CAACH,IAAI,CAAC4B,KAAK;QACTC,EAAE,EAAE5B,GAAI;QACR6B,SAAS,EAAC,MAAM;QAChBC,SAAS,EAAC,uBAAuB;QAAAT,QAAA,gBAEjCnB,OAAA,CAACH,IAAI,CAACgC,KAAK;UAACC,MAAM;UAACC,EAAE,EAAC,GAAG;UAAAZ,QAAA,EAAC;QAE1B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbvB,OAAA,CAACJ,GAAG;UAACmC,EAAE,EAAC,IAAI;UAAAZ,QAAA,eACVnB,OAAA,CAACH,IAAI,CAACmC,OAAO;YAACC,IAAI,EAAC,UAAU;YAACI,WAAW,EAAC;UAAU;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACbvB,OAAA;QAAAmB,QAAA,GAAI,aAEF,eAAAnB,OAAA;UACEiC,IAAI,EAAC,KAAK;UACV5B,EAAE,EAAC,WAAW;UACdiC,IAAI,EAAC,WAAW;UAChBxB,KAAK,EAAEN,SAAS,IAAI,EAAG;UACvB0B,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACuB,CAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLvB,OAAA;QAAAmB,QAAA,GAAI,SAEF,eAAAnB,OAAA;UACEiC,IAAI,EAAC,MAAM;UACX5B,EAAE,EAAC,QAAQ;UACXiC,IAAI,EAAC,QAAQ;UACbxB,KAAK,EAAEL,MAAM,IAAI,EAAG;UACpByB,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACuB,CAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLvB,OAAA,CAACL,MAAM;QAAC4C,IAAI,EAAC,IAAI;QAACN,IAAI,EAAC,QAAQ;QAACO,OAAO,EAAEA,CAAA,KAAMxB,IAAI,CAAC,CAAE;QAAAG,QAAA,EAAC;MAEvD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHvB,OAAA,CAAAE,SAAA,mBAAI,CACL;EAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7FWD,cAAc;EAAA,QAEVX,SAAS,EAOFC,aAAa;AAAA;AAAAgD,EAAA,GATxBtC,cAAc;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}