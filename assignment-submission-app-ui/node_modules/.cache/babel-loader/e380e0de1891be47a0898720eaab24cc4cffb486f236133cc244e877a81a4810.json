{"ast":null,"code":"var _jsxFileName = \"E:\\\\FullStack React-Springboot\\\\AssignmentSubmissionApp\\\\assignment-submission-app-ui\\\\src\\\\AssignmentView\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocalState } from \"../util/useLocalStrorage\";\nimport { ajax } from \"../Services/fetchService\";\nimport { Badge, Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AssignmentView = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\n  const {\n    id\n  } = useParams();\n  const [assignment, setAssignment] = useState({\n    githubUrl: \"\",\n    branch: \"\"\n  });\n  //const { githubUrl, branch } = assignment;\n\n  function updateAssignment(prop, value) {\n    const newAssignment = {\n      ...assignment\n    };\n    newAssignment[prop] = value;\n    setAssignment(newAssignment);\n    // setAssignment({ ...assignment, [e.target.name]: e.target.value });\n  }\n\n  function save() {\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }\n  useEffect(() => {\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then(assignmentData => {\n      setAssignment(assignmentData);\n    });\n  }, [id, jwt]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(Rew, {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \"Assignment \", id, /*#__PURE__*/_jsxDEV(Badge, {\n        pill: true,\n        bg: \"primary\",\n        children: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), assignment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", assignment.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"3\",\n          md: \"2\",\n          children: \"GitHub URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"9\",\n          md: \"8\",\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"githubRrl\",\n            type: \"url\",\n            value: assignment.githubUrl || \"\",\n            onChange: e => updateAssignment(\"githubUrl\", e.target.value),\n            placeholder: \"Https://github.com/username/repo-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"3\",\n          md: \"2\",\n          children: \"Branch :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"9\",\n          md: \"8\",\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"branch\",\n            type: \"text\",\n            name: \"branch\",\n            value: assignment.branch || \"\",\n            onChange: e => updateAssignment(e),\n            placeholder: \"example_branch_name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        onClick: () => save(),\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignmentView, \"z78mHmYC9F5mXXEohUSI5023+iw=\", false, function () {\n  return [useLocalState, useParams];\n});\n_c = AssignmentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocalState","ajax","Badge","Button","Col","Container","Form","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentView","_s","jwt","setJwt","id","assignment","setAssignment","githubUrl","branch","updateAssignment","prop","value","newAssignment","save","then","assignmentData","className","children","Rew","fileName","_jsxFileName","lineNumber","columnNumber","pill","bg","status","Group","as","controlId","Label","column","sm","md","lg","Control","type","onChange","e","target","placeholder","name","size","onClick","_c","$RefreshReg$"],"sources":["E:/FullStack React-Springboot/AssignmentSubmissionApp/assignment-submission-app-ui/src/AssignmentView/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStrorage\";\r\nimport { ajax } from \"../Services/fetchService\";\r\nimport { Badge, Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nexport const AssignmentView = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  //const assignmentId = window.location.href.split(\"/assignments/\")[1]; //This can also work to get the path\r\n  const { id } = useParams();\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    githubUrl: \"\",\r\n    branch: \"\",\r\n  });\r\n  //const { githubUrl, branch } = assignment;\r\n\r\n  function updateAssignment(prop, value) {\r\n    const newAssignment = { ...assignment };\r\n    newAssignment[prop] = value;\r\n    setAssignment(newAssignment);\r\n    // setAssignment({ ...assignment, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function save() {\r\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(\r\n      (assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      }\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then((assignmentData) => {\r\n      setAssignment(assignmentData);\r\n    });\r\n  }, [id, jwt]);\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h1>\r\n        <Rew>C</Rew>\r\n        Assignment {id}\r\n        <Badge pill bg=\"primary\">\r\n          Primary\r\n        </Badge>\r\n      </h1>\r\n      {assignment ? (\r\n        <>\r\n          <h2>Status: {assignment.status}</h2>\r\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              GitHub URL:\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <Form.Control\r\n                id=\"githubRrl\"\r\n                type=\"url\"\r\n                value={assignment.githubUrl || \"\"}\r\n                onChange={(e) => updateAssignment(\"githubUrl\", e.target.value)}\r\n                placeholder=\"Https://github.com/username/repo-name\"\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              Branch :\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <Form.Control\r\n                id=\"branch\"\r\n                type=\"text\"\r\n                name=\"branch\"\r\n                value={assignment.branch || \"\"}\r\n                onChange={(e) => updateAssignment(e)}\r\n                placeholder=\"example_branch_name\"\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Button size=\"lg\" type=\"submit\" onClick={() => save()}>\r\n            Submit Assignment\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,KAAK,EAAEC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3E,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGf,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAC9C;EACA,MAAM;IAAEgB;EAAG,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC;IAC3CqB,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE;EACV,CAAC,CAAC;EACF;;EAEA,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACrC,MAAMC,aAAa,GAAG;MAAE,GAAGP;IAAW,CAAC;IACvCO,aAAa,CAACF,IAAI,CAAC,GAAGC,KAAK;IAC3BL,aAAa,CAACM,aAAa,CAAC;IAC5B;EACF;;EAEA,SAASC,IAAIA,CAAA,EAAG;IACdxB,IAAI,CAAE,oBAAmBe,EAAG,EAAC,EAAE,KAAK,EAAEF,GAAG,EAAEG,UAAU,CAAC,CAACS,IAAI,CACxDC,cAAc,IAAK;MAClBT,aAAa,CAACS,cAAc,CAAC;IAC/B,CACF,CAAC;EACH;EACA9B,SAAS,CAAC,MAAM;IACdI,IAAI,CAAE,oBAAmBe,EAAG,EAAC,EAAE,KAAK,EAAEF,GAAG,CAAC,CAACY,IAAI,CAAEC,cAAc,IAAK;MAClET,aAAa,CAACS,cAAc,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,EAAE,EAAEF,GAAG,CAAC,CAAC;EAEb,oBACEL,OAAA,CAACJ,SAAS;IAACuB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBpB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA,CAACqB,GAAG;QAAAD,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACD,EAAClB,EAAE,eACdP,OAAA,CAACP,KAAK;QAACiC,IAAI;QAACC,EAAE,EAAC,SAAS;QAAAP,QAAA,EAAC;MAEzB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACJjB,UAAU,gBACTR,OAAA,CAAAE,SAAA;MAAAkB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,GAAI,UAAQ,EAACZ,UAAU,CAACoB,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpCzB,OAAA,CAACH,IAAI,CAACgC,KAAK;QAACC,EAAE,EAAEhC,GAAI;QAACqB,SAAS,EAAC,MAAM;QAACY,SAAS,EAAC,oBAAoB;QAAAX,QAAA,gBAClEpB,OAAA,CAACH,IAAI,CAACmC,KAAK;UAACC,MAAM;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAAAf,QAAA,EAAC;QAEjC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbzB,OAAA,CAACL,GAAG;UAACuC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAAAhB,QAAA,eACvBpB,OAAA,CAACH,IAAI,CAACwC,OAAO;YACX9B,EAAE,EAAC,WAAW;YACd+B,IAAI,EAAC,KAAK;YACVxB,KAAK,EAAEN,UAAU,CAACE,SAAS,IAAI,EAAG;YAClC6B,QAAQ,EAAGC,CAAC,IAAK5B,gBAAgB,CAAC,WAAW,EAAE4B,CAAC,CAACC,MAAM,CAAC3B,KAAK,CAAE;YAC/D4B,WAAW,EAAC;UAAuC;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACbzB,OAAA,CAACH,IAAI,CAACgC,KAAK;QAACC,EAAE,EAAEhC,GAAI;QAACqB,SAAS,EAAC,MAAM;QAACY,SAAS,EAAC,oBAAoB;QAAAX,QAAA,gBAClEpB,OAAA,CAACH,IAAI,CAACmC,KAAK;UAACC,MAAM;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAAAf,QAAA,EAAC;QAEjC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbzB,OAAA,CAACL,GAAG;UAACuC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAAAhB,QAAA,eACvBpB,OAAA,CAACH,IAAI,CAACwC,OAAO;YACX9B,EAAE,EAAC,QAAQ;YACX+B,IAAI,EAAC,MAAM;YACXK,IAAI,EAAC,QAAQ;YACb7B,KAAK,EAAEN,UAAU,CAACG,MAAM,IAAI,EAAG;YAC/B4B,QAAQ,EAAGC,CAAC,IAAK5B,gBAAgB,CAAC4B,CAAC,CAAE;YACrCE,WAAW,EAAC;UAAqB;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACbzB,OAAA,CAACN,MAAM;QAACkD,IAAI,EAAC,IAAI;QAACN,IAAI,EAAC,QAAQ;QAACO,OAAO,EAAEA,CAAA,KAAM7B,IAAI,CAAC,CAAE;QAAAI,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHzB,OAAA,CAAAE,SAAA,mBAAI,CACL;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACrB,EAAA,CAjFWD,cAAc;EAAA,QACHZ,aAAa,EAEpBD,SAAS;AAAA;AAAAwD,EAAA,GAHb3C,cAAc;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}